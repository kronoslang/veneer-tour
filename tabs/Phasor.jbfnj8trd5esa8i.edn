{:documentation "Increases linearly from 0 to 1, and wraps back to 0. This occurs 'freq' times per second at the audio rate."
 :draft-argument "440"
 :identifier "Phasor"
 :identity "jbfnj8trd5esa8i"
 :patch
{:cables
{["2q9lpzo651xq72" 0] [:fixed "wqanes0pc21xvsy" 0]
 ["2q9lpzo651xq72" 1] [:fixed "ajdea0boi6956k8" 0]
 ["ajdea0boi6956k8" 0] [:fixed "dkiuofz795bgiea" 0]
 ["dkiuofz795bgiea" 0] [:fixed "2q9lpzo651xq72" 0]
 ["g20yedveocgvlvy" 0] [:fixed "ajdea0boi6956k8" 0]
 ["kjh3qi6d1w5w7zz" 0] [:fixed "ja45r6d488giop" 0]
 ["kjh3qi6d1w5w7zz" 1] [:fixed "lxyk22kq4gzgksk" 0]
 ["wqanes0pc21xvsy" 0] [:fixed "kjh3qi6d1w5w7zz" 0]}
 :nodes
{"2q9lpzo651xq72" 
{:inputs ["a" "b" "more..."]
 :label "+"
 :outputs [""]
 :parsed [:infix [:free-var "a"] "+" [:free-var "b"] [:free-var "more..."]]
 :pos [-64 32]}
 "81ya0grq22e2hs5" 
{:inputs []
 :label "; This is a cyclic connection. Each sample\nis the sum of the previous output and the fraction frequency / samplerate."
 :outputs []
 :parsed [:comment "This is a cyclic connection. Each sample\nis the sum of the previous output and the fraction frequency / samplerate."]
 :pos [-87 145]}
 "ajdea0boi6956k8" 
{:inputs ["sig~"]
 :label "z-1($sig~)"
 :outputs [""]
 :parsed [:fn "z-1" [:tuple [:free-var "sig~"]]]
 :pos [203 61]}
 "dkiuofz795bgiea" 
{:inputs ["x"]
 :label "Fraction($x)"
 :outputs [""]
 :parsed [:fn "Fraction" [:tuple [:free-var "x"]]]
 :pos [26 61]}
 "g20yedveocgvlvy" 
{:inputs ["sig"]
 :label "o))"
 :outputs ["thru"]
 :parsed [:playback [:free-var "sig"]]
 :pos [352 124]
 :selected true}
 "ja45r6d488giop" 
{:inputs []
 :label "freq = arg"
 :outputs ["freq"]
 :parsed "arg"
 :pos [-419 -71]}
 "kjh3qi6d1w5w7zz" 
{:inputs ["a" "b" "more..."]
 :label "/"
 :outputs [""]
 :parsed [:infix [:free-var "a"] "/" [:free-var "b"] [:free-var "more..."]]
 :pos [-306 -71]}
 "lxyk22kq4gzgksk" 
{:inputs []
 :label "Gen:Rate()"
 :outputs [""]
 :parsed [:fn "Gen:Rate" [:tuple]]
 :pos [-419 -180]}
 "n1ecu32t3u2lezq" 
{:inputs []
 :label "; divide frequency by audio rate, and upsample to audio signal"
 :outputs []
 :parsed [:comment "divide frequency by audio rate, and upsample to audio signal"]
 :pos [-277 -193]}
 "wqanes0pc21xvsy" 
{:inputs ["sig"]
 :label "Gen:Signal($sig)"
 :outputs [""]
 :parsed [:fn "Gen:Signal" [:tuple [:free-var "sig"]]]
 :pos [-231 -68]}}
 :scale 1
 :scroll [0 0]}}